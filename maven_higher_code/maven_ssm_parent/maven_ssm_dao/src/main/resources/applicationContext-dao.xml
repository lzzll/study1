<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- mybatis框架中的主配置文件整合到spring的核心配置文件中了-->
    <!-- 一、配置数据源-->
    <!-- 加载外部配置文件-->
    <context:property-placeholder location="classpath:druid.properties"></context:property-placeholder>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <!-- 在spring框架的主配置文件中,druid数据源如果使用外部配置文件来配置,那么配置文件中定义的格式一定为jdbc.driver="",而不能为driverClassName="",容易报错-->
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!-- 二、配置生产sqlSession对象的工厂,在mybatis框架中,sqlSession是操作数据库的对象 -->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- sqlSession对象必须依赖数据源,所以需要注入数据源依赖 -->
        <property name="dataSource" ref="dataSource"></property>
        <!-- 扫描pojo包,给所有pojo包起别名 -->
        <!-- 实际开发中,可以不用配置别名,如果配置了,一旦包过多就不容易区分是哪个模块的实体类 -->
        <!--<property name="typeAliasesPackage" value="com.itheima.domain"></property>-->
    </bean>

    <!-- 三、扫描接口包路径,将接口包路径下面的接口的代理对象放入spring容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.itheima.dao"></property>
    </bean>
    <!-- mybatis框架中的配置文件结束 -->


</beans>